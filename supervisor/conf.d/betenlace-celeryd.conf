; ==================================
;  celery worker supervisor
; ==================================

[program:celery]
command=%(ENV_PYTHON_BIN_DIR)s/celery -A %(ENV_DJANGO_APP_NAME)s worker --loglevel=%(ENV_CELERY_WORKER_LOG_LEVEL)s --pidfile=%(ENV_DJANGO_ROOT)s/logs/celery/celery.pid
directory=%(ENV_DJANGO_ROOT)s/

user=%(ENV_USER_SUPERVISOR)s
numprocs=1
stdout_logfile=%(ENV_DJANGO_ROOT)s/logs/celery/worker.log
stdout_logfile_maxbytes=5MB
stdout_logfile_backups=10
stderr_logfile=%(ENV_DJANGO_ROOT)s/logs/celery/worker.log
stderr_logfile_maxbytes=5MB
stderr_logfile_backups=10
autostart=true
autorestart=true
startsecs=10
killasgroup=true
stopsignal=INT

; Need to wait for currently executing tasks to finish at shutdown.
; Increase this if you have very long running tasks.
stopwaitsecs = 600

; Causes supervisor to send the termination signal (SIGTERM) to the whole process group.
stopasgroup=true

; Set Celery priority higher than default (999)
; so, if rabbitmq is supervised, it will start first.
priority=1000

